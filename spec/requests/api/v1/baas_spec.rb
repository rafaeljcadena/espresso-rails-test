# frozen_string_literal: true

require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe '/webhooks' do
  let(:valid_attributes) { attributes_for(:statement_a) }

  describe 'POST /webhooks' do
    it 'is public access' do
      post api_v1_webhooks_path, params: { statement: valid_attributes }
      expect(response).not_to have_http_status(:unauthorized)
    end

    context 'with valid parameters' do
      it 'does create a statement' do
        post api_v1_webhooks_path, params: { statement: valid_attributes }
        expect(response).to have_http_status(:created)
      end
    end

    context 'with invalid parameters' do
      it 'does not create a statement' do
        invalid_statement_params = valid_attributes
        invalid_statement_params.delete :performed_at

        post api_v1_webhooks_path, params: { statement: invalid_statement_params }
        expect(response).to have_http_status(:unprocessable_entity)
      end
    end
  end
end
